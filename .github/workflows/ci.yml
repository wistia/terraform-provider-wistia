name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
      - name: Check out
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run gofmt
        shell: bash
        run: |
          if ! test -z $(gofmt -l .); then
            echo "Some files are not formatted properly. Please run \"go fmt ./...\" and commit the changes."
            echo
            gofmt -d .
            exit 1
          fi
      - name: Run vet
        run: go vet ./...

  docs:
    name: Check documentation freshness
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
      - name: Check out
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: |
          go generate

          if ! git diff --quiet; then
            echo "The documentation has changed. Please run `go generate` and commit the changes."
            exit 1
          fi

  build:
    name: Build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        go-version: [ 1.14.x, 1.15.x, 1.16.x, 1.17.x ]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install just
        uses: extractions/setup-just@aa5d15c144db4585980a44ebfdd2cf337c4f14cb # v1.4.0
      - name: Check out
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        run: go build
      - name: Test
        run: go test ./...
      - name: Test against Wistia API
        run: |
          set -e

          just install linux_amd64

          cd examples
          terraform init
          WISTIA_ACCESS_TOKEN="${{ secrets.READ_ONLY_TOKEN }}" terraform plan
